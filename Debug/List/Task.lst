###############################################################################
#
# IAR C/C++ Compiler V7.10.6.1378 for Atmel AVR           15/Feb/2023  14:52:52
# Copyright 1996-2018 IAR Systems AB.
#
#    Source file  =  D:\Projects\CautoProjects\PSS48\PSS48\src\Task.cpp
#    Command line =  
#        -f C:\Users\ghost\AppData\Local\Temp\EWD1E1.tmp
#        (--string_literals_in_flash
#        D:\Projects\CautoProjects\PSS48\PSS48\src\Task.cpp --cpu=m128a -ms -o
#        D:\Projects\CautoProjects\PSS48\PSS48\Debug\Obj -lC
#        D:\Projects\CautoProjects\PSS48\PSS48\Debug\List -lB
#        D:\Projects\CautoProjects\PSS48\PSS48\Debug\List -y
#        --initializers_in_flash --root_variables --debug
#        -DENABLE_BIT_DEFINITIONS -e -I
#        D:\Projects\CautoProjects\PSS48\PSS48\include\ -I
#        D:\Projects\CautoProjects\PSS48\PSS48\Modbus\ --eeprom_size 4096
#        --dlib --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 8.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h" -Ohz --eec++)
#    Locale       =  Russian_RUS.1251
#    List file    =  D:\Projects\CautoProjects\PSS48\PSS48\Debug\List\Task.lst
#    Object file  =  D:\Projects\CautoProjects\PSS48\PSS48\Debug\Obj\Task.r90
#
###############################################################################

D:\Projects\CautoProjects\PSS48\PSS48\src\Task.cpp
      1          
      2          //-----------------------------------------------------------------------------------------------------
      3          //  Source      : FileName.cpp
      4          //  Created     : 01.06.2022
      5          //  Author      : Alexandr Volvenkin
      6          //  email       : aav-36@mail.ru
      7          //  GitHub      : https://github.com/AlexandrVolvenkin
      8          //-----------------------------------------------------------------------------------------------------
      9          #include "Task.h"

      virtual bool IsSolved(void) {};
                                   ^
"D:\Projects\CautoProjects\PSS48\PSS48\include\Task.h",30  Warning[Pe940]: 
          missing return statement at end of non-void function
          "CTaskInterface::IsSolved"

      bool IsSolved(void) {};
                           ^
"D:\Projects\CautoProjects\PSS48\PSS48\include\Task.h",79  Warning[Pe940]: 
          missing return statement at end of non-void function
          "CIsRegularButtonPressedInterface::IsSolved"

      virtual bool IsSourceStateActive(void) {};
                                              ^
"D:\Projects\CautoProjects\PSS48\PSS48\include\Task.h",82  Warning[Pe940]: 
          missing return statement at end of non-void function
          "CIsRegularButtonPressedInterface::IsSourceStateActive"

      virtual uint16_t KEY_PRESSED_TIME(void) {};
                                               ^
"D:\Projects\CautoProjects\PSS48\PSS48\include\Task.h",84  Warning[Pe940]: 
          missing return statement at end of non-void function
          "CIsRegularButtonPressedInterface::KEY_PRESSED_TIME"
     10          #include "Platform.h"

      static __flash TDataBase CFlash::xMainDataBase;
                               ^
"D:\Projects\CautoProjects\PSS48\PSS48\include\Platform.h",366  Warning[Pe427]: 
          qualified name is not allowed in member declaration

      static __flash TDataBaseBlockPositionData CFlash::axDataBaseBlocksPositionData[];
                                                ^
"D:\Projects\CautoProjects\PSS48\PSS48\include\Platform.h",367  Warning[Pe427]: 
          qualified name is not allowed in member declaration
     11          
     12          ////-----------------------------------------------------------------------------------------------------
     13          //CTask::CTask()
     14          //{
     15          //
     16          //}
     17          //
     18          //
     19          ////-----------------------------------------------------------------------------------------------------
     20          //CTask::~CTask()
     21          //{
     22          //
     23          //}
     24          //
     25          ////-----------------------------------------------------------------------------------------------------
     26          
     27          
     28          
     29          
     30          
     31          {
                 ^
Error[Pe169]: expected a declaration
     32              enum
     33              {
     34                  TASK_IDDLE = 0,
     35                  TASK_START,
     36                  TASK_IS_SOLVED,
     37          
     38                  KEY_STATE_UNPRESSED,
     39                  KEY_STATE_PRESSED,
     40              };
     41          
     42          //-----------------------------------------------------------------------------------------------------
     43              CIsReceiptButtonPressed::CIsReceiptButtonPressed()
     44              {
     45                  SetFsmState(TASK_START);
     46              }
     47          
     48          //-----------------------------------------------------------------------------------------------------
     49              CIsReceiptButtonPressed::~CIsReceiptButtonPressed()
     50              {
     51          
     52              }
     53          
     54          //-----------------------------------------------------------------------------------------------------
     55              bool CIsReceiptButtonPressed::IsSourceStateActive(void)
     56              {
     57                  if (CPlatform::KeyOneState())
     58                  {
     59                      return true;
     60                  }
     61                  else
     62                  {
     63                      return false;
     64                  }
     65              }
     66          
     67          //-----------------------------------------------------------------------------------------------------
     68              void CIsReceiptButtonPressed::Fsm(void)
     69              {
     70                  // какое событие обрабатываем?
     71                  switch (GetFsmState())
     72                  {
     73                  case TASK_IDDLE:
     74                      break;
     75          
     76                  case TASK_START:
     77                      SetFsmState(KEY_STATE_UNPRESSED);
     78                      break;
     79          
     80                  case KEY_STATE_UNPRESSED:
     81                      // кнопка нажата?
     82                      if (IsSourceStateActive())
     83                      {
     84                          m_xTimer.Set(KEY_PRESSED_TIME());
     85                          SetFsmState(KEY_STATE_PRESSED);
     86                      }
     87                      break;
     88                  case KEY_STATE_PRESSED:
     89                      // кнопка нажата?
     90                      if (IsSourceStateActive())
     91                      {
     92                          if (m_xTimer.IsOverflow())
     93                          {
     94                              SetFsmState(TASK_IS_SOLVED);
     95                          }
     96                      }
     97                      else
     98                      {
     99                          SetFsmState(KEY_STATE_UNPRESSED);
    100                      }
    101                      break;
    102          
    103                  case TASK_IS_SOLVED:
    104                      break;
    105          
    106                  default:
    107                      break;
    108                  }
    109              }
    110          
    111          //-----------------------------------------------------------------------------------------------------
    112              bool CIsReceiptButtonPressed::IsSolved(void)
    113              {
    114                  if (GetFsmState() == TASK_IS_SOLVED)
    115                  {
    116                      SetFsmState(TASK_START);
    117                      return true;
    118                  }
    119                  else
    120                  {
    121                      return false;
    122                  }
    123              }
    124          
    125          //-----------------------------------------------------------------------------------------------------
    126          }
                 ^
Error[Pe169]: expected a declaration
    127          
    128          
    129          
    130          
    131          
    132          
    133          
    134          //-----------------------------------------------------------------------------------------------------
    135          CIsAlarmReset::CIsAlarmReset()
    136          {
    137              SetFsmState(TASK_START);
    138          }
    139          
    140          //-----------------------------------------------------------------------------------------------------
    141          CIsAlarmReset::~CIsAlarmReset()
    142          {
    143          
    144          }
    145          
    146          //-----------------------------------------------------------------------------------------------------
    147          void CIsAlarmReset::Fsm(void)
    148          {
    149              // какое событие обрабатываем?
    150              switch (GetFsmState())
    151              {
    152              case TASK_IDDLE:
    153                  break;
    154          
    155              case TASK_START:
    156                  break;
    157          
    158              case TASK_IS_SOLVED:
    159                  break;
    160          
    161              default:
    162                  break;
    163              }
    164          }
    165          
    166          //-----------------------------------------------------------------------------------------------------
    167          bool CIsAlarmReset::IsSolved(void)
    168          {
    169              if (GetFsmState() == TASK_IS_SOLVED)
    170              {
    171                  SetFsmState(TASK_START);
    172                  return true;
    173              }
    174              else
    175              {
    176                  return false;
    177              }
    178          }
    179          
    180          //-----------------------------------------------------------------------------------------------------
    181          
    182          
    183          
    184          
    185          
    186          
    187          //-----------------------------------------------------------------------------------------------------
Warning[Pe012]: parsing restarts here after previous syntax error

Errors: 2
Warnings: 7

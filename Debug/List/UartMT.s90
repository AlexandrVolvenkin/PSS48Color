///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V7.10.6.1378 for Atmel AVR          29/May/2022  10:18:56
// Copyright 1996-2018 IAR Systems AB.
//
//    Source file  =  D:\Projects\CautoProjects\PSS48\PSS48\SerialMT\UartMT.cpp
//    Command line =  
//        -f C:\Users\ghost\AppData\Local\Temp\EWEB29.tmp
//        (--string_literals_in_flash
//        D:\Projects\CautoProjects\PSS48\PSS48\SerialMT\UartMT.cpp --cpu=m128a
//        -ms -o D:\Projects\CautoProjects\PSS48\PSS48\Debug\Obj -lA
//        D:\Projects\CautoProjects\PSS48\PSS48\Debug\List -y
//        --initializers_in_flash --root_variables --no_cse --no_inline
//        --no_code_motion --no_cross_call --no_clustering --no_tbaa --debug
//        -DENABLE_BIT_DEFINITIONS -e -I
//        D:\Projects\CautoProjects\PSS48\PSS48\include\ -I
//        D:\Projects\CautoProjects\PSS48\PSS48\Modbus\ --eeprom_size 4096
//        --dlib --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded
//        Workbench 8.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-n.h" -On --eec++)
//    Locale       =  Russian_RUS.1251
//    List file    =  
//        D:\Projects\CautoProjects\PSS48\PSS48\Debug\List\UartMT.s90
//
///////////////////////////////////////////////////////////////////////////////

        NAME UartMT

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega128A"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__dlib_full_locale_support", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "true"
        RTMODEL "__memory_model", "2"
        RTMODEL "__no_rampd", "enabled"
        RTMODEL "__rt_version", "3"
        RTMODEL "__vtable_memory", "__nearflash"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?EPILOGUE_B10_L09
        EXTERN ?EPILOGUE_B4_L09
        EXTERN ?EPILOGUE_B6_L09
        EXTERN ?PROLOGUE10_L09
        EXTERN ?PROLOGUE4_L09
        EXTERN ?PROLOGUE6_L09
        EXTERN ?Register_R4_is_cg_reg
        EXTERN ?Register_R5_is_cg_reg
        EXTERN ?Register_R6_is_cg_reg
        EXTERN ?Register_R7_is_cg_reg
        EXTERN ?Register_R8_is_cg_reg
        EXTERN ?Register_R9_is_cg_reg

        PUBWEAK ??ByteIsReceived
        PUBWEAK ??CTask
        PUBLIC ??CUartMT
        PUBLIC ??Execution
        PUBLIC ??FrameCheck
        PUBLIC ??FrameCheck_1
        PUBLIC ??FrameIsReceived
        PUBWEAK ??FrameIsSended
        PUBWEAK ??GetFrameLength
        PUBLIC ??GetFrameLength_1
        PUBWEAK ??GetSystemTick
        PUBLIC ??GetSystemTime
        PUBLIC ??Init
        PUBLIC ??MessageIsSended
        PUBLIC ??Receive
        PUBLIC ??ReceiveDisable
        PUBLIC ??ReceiveEnable
        PUBLIC ??ReceiveTimeIsOver
        PUBLIC ??Reset
        PUBLIC ??Select
        PUBLIC ??Send
        PUBLIC ??Tail
        PUBWEAK ??TxLedOff
        PUBWEAK ??TxLedOn
        PUBWEAK ??__vtbl
        PUBLIC `??new CUartMT`
        PUBLIC `?~CUartMT`
        PUBWEAK _A_ACSR
        PUBWEAK _A_ADC
        PUBWEAK _A_ADCSRA
        PUBWEAK _A_ADMUX
        PUBWEAK _A_ASSR
        PUBWEAK _A_DDRA
        PUBWEAK _A_DDRB
        PUBWEAK _A_DDRC
        PUBWEAK _A_DDRD
        PUBWEAK _A_DDRE
        PUBWEAK _A_DDRF
        PUBWEAK _A_DDRG
        PUBWEAK _A_EEAR
        PUBWEAK _A_EECR
        PUBWEAK _A_EEDR
        PUBWEAK _A_EICRA
        PUBWEAK _A_EICRB
        PUBWEAK _A_EIFR
        PUBWEAK _A_EIMSK
        PUBWEAK _A_ETIFR
        PUBWEAK _A_ETIMSK
        PUBWEAK _A_ICR1
        PUBWEAK _A_ICR3
        PUBWEAK _A_MCUCR
        PUBWEAK _A_MCUCSR
        PUBWEAK _A_OCDR
        PUBWEAK _A_OCR0
        PUBWEAK _A_OCR1A
        PUBWEAK _A_OCR1B
        PUBWEAK _A_OCR1C
        PUBWEAK _A_OCR2
        PUBWEAK _A_OCR3A
        PUBWEAK _A_OCR3B
        PUBWEAK _A_OCR3C
        PUBWEAK _A_OSCCAL
        PUBWEAK _A_PINA
        PUBWEAK _A_PINB
        PUBWEAK _A_PINC
        PUBWEAK _A_PIND
        PUBWEAK _A_PINE
        PUBWEAK _A_PINF
        PUBWEAK _A_PING
        PUBWEAK _A_PORTA
        PUBWEAK _A_PORTB
        PUBWEAK _A_PORTC
        PUBWEAK _A_PORTD
        PUBWEAK _A_PORTE
        PUBWEAK _A_PORTF
        PUBWEAK _A_PORTG
        PUBWEAK _A_RAMPZ
        PUBWEAK _A_SFIOR
        PUBWEAK _A_SP
        PUBWEAK _A_SPCR
        PUBWEAK _A_SPDR
        PUBWEAK _A_SPMCSR
        PUBWEAK _A_SPSR
        PUBWEAK _A_SREG
        PUBWEAK _A_TCCR0
        PUBWEAK _A_TCCR1A
        PUBWEAK _A_TCCR1B
        PUBWEAK _A_TCCR1C
        PUBWEAK _A_TCCR2
        PUBWEAK _A_TCCR3A
        PUBWEAK _A_TCCR3B
        PUBWEAK _A_TCCR3C
        PUBWEAK _A_TCNT0
        PUBWEAK _A_TCNT1
        PUBWEAK _A_TCNT2
        PUBWEAK _A_TCNT3
        PUBWEAK _A_TIFR
        PUBWEAK _A_TIMSK
        PUBWEAK _A_TWAR
        PUBWEAK _A_TWBR
        PUBWEAK _A_TWCR
        PUBWEAK _A_TWDR
        PUBWEAK _A_TWSR
        PUBWEAK _A_UBRR0H
        PUBWEAK _A_UBRR0L
        PUBWEAK _A_UBRR1H
        PUBWEAK _A_UBRR1L
        PUBWEAK _A_UCSR0A
        PUBWEAK _A_UCSR0B
        PUBWEAK _A_UCSR0C
        PUBWEAK _A_UCSR1A
        PUBWEAK _A_UCSR1B
        PUBWEAK _A_UCSR1C
        PUBWEAK _A_UDR0
        PUBWEAK _A_UDR1
        PUBWEAK _A_WDTCR
        PUBWEAK _A_XDIV
        PUBWEAK _A_XMCRA
        PUBWEAK _A_XMCRB
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
`?<Name CTask 42>`  SYMBOL "CTask"
??__vtbl_1          SYMBOL "__vtbl", `?<Name CTask 42>`
`?<Name CPlatform 47>` SYMBOL "CPlatform"
??m_uiSystemTick    SYMBOL "m_uiSystemTick", `?<Name CPlatform 47>`
`?<Name CUartMT 59>` SYMBOL "CUartMT"
??__vtbl            SYMBOL "__vtbl", `?<Name CUartMT 59>`

        EXTERN ??Disable
        EXTERN ??Enable
        EXTERN ??Read
        EXTERN ??Reply
        EXTERN ??Reset_1
        EXTERN ??Write
        EXTERN ??__vtbl_1
        EXTERN ??m_uiSystemTick
        EXTERN `??operator delete`
        EXTERN `??operator new`
        EXTERN ??usCrc16

// D:\Projects\CautoProjects\PSS48\PSS48\SerialMT\UartMT.cpp
//    1 //-----------------------------------------------------------------------------------------------------
//    2 //  Sourse      : FileName.cpp
//    3 //  Created     : 01.06.2022
//    4 //  Author      : Alexandr Volvenkin
//    5 //  email       : aav-36@mail.ru
//    6 //  GitHub      : https://github.com/AlexandrVolvenkin
//    7 //-----------------------------------------------------------------------------------------------------
//    8 // SerialMT - serial multi trans.
//    9 //-----------------------------------------------------------------------------------------------------
//   10 #include <cstring>
//   11 
//   12 #include "Platform.h"

        ASEGN ABSOLUTE:DATA:ROOT,09dH
// union <unnamed> volatile __io _A_UCSR1C
_A_UCSR1C:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,09cH
// union <unnamed> volatile __io _A_UDR1
_A_UDR1:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,09bH
// union <unnamed> volatile __io _A_UCSR1A
_A_UCSR1A:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,09aH
// union <unnamed> volatile __io _A_UCSR1B
_A_UCSR1B:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,099H
// union <unnamed> volatile __io _A_UBRR1L
_A_UBRR1L:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,098H
// union <unnamed> volatile __io _A_UBRR1H
_A_UBRR1H:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,095H
// union <unnamed> volatile __io _A_UCSR0C
_A_UCSR0C:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,090H
// union <unnamed> volatile __io _A_UBRR0H
_A_UBRR0H:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,08cH
// union <unnamed> volatile __io _A_TCCR3C
_A_TCCR3C:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,08bH
// union <unnamed> volatile __io _A_TCCR3A
_A_TCCR3A:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,08aH
// union <unnamed> volatile __io _A_TCCR3B
_A_TCCR3B:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,088H
// union <unnamed> volatile __io _A_TCNT3
_A_TCNT3:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,086H
// union <unnamed> volatile __io _A_OCR3A
_A_OCR3A:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,084H
// union <unnamed> volatile __io _A_OCR3B
_A_OCR3B:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,082H
// union <unnamed> volatile __io _A_OCR3C
_A_OCR3C:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,080H
// union <unnamed> volatile __io _A_ICR3
_A_ICR3:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,07dH
// union <unnamed> volatile __io _A_ETIMSK
_A_ETIMSK:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,07cH
// union <unnamed> volatile __io _A_ETIFR
_A_ETIFR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,07aH
// union <unnamed> volatile __io _A_TCCR1C
_A_TCCR1C:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,078H
// union <unnamed> volatile __io _A_OCR1C
_A_OCR1C:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,074H
// union <unnamed> volatile __io _A_TWCR
_A_TWCR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,073H
// union <unnamed> volatile __io _A_TWDR
_A_TWDR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,072H
// union <unnamed> volatile __io _A_TWAR
_A_TWAR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,071H
// union <unnamed> volatile __io _A_TWSR
_A_TWSR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,070H
// union <unnamed> volatile __io _A_TWBR
_A_TWBR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,06fH
// union <unnamed> volatile __io _A_OSCCAL
_A_OSCCAL:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,06dH
// union <unnamed> volatile __io _A_XMCRA
_A_XMCRA:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,06cH
// union <unnamed> volatile __io _A_XMCRB
_A_XMCRB:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,06aH
// union <unnamed> volatile __io _A_EICRA
_A_EICRA:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,068H
// union <unnamed> volatile __io _A_SPMCSR
_A_SPMCSR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,065H
// union <unnamed> volatile __io _A_PORTG
_A_PORTG:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,064H
// union <unnamed> volatile __io _A_DDRG
_A_DDRG:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,063H
// union <unnamed> volatile __io _A_PING
_A_PING:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,062H
// union <unnamed> volatile __io _A_PORTF
_A_PORTF:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,061H
// union <unnamed> volatile __io _A_DDRF
_A_DDRF:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,05fH
// union <unnamed> volatile __io _A_SREG
_A_SREG:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,05dH
// union <unnamed> volatile __io _A_SP
_A_SP:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,05cH
// union <unnamed> volatile __io _A_XDIV
_A_XDIV:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,05bH
// union <unnamed> volatile __io _A_RAMPZ
_A_RAMPZ:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,05aH
// union <unnamed> volatile __io _A_EICRB
_A_EICRB:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,059H
// union <unnamed> volatile __io _A_EIMSK
_A_EIMSK:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,058H
// union <unnamed> volatile __io _A_EIFR
_A_EIFR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,057H
// union <unnamed> volatile __io _A_TIMSK
_A_TIMSK:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,056H
// union <unnamed> volatile __io _A_TIFR
_A_TIFR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,055H
// union <unnamed> volatile __io _A_MCUCR
_A_MCUCR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,054H
// union <unnamed> volatile __io _A_MCUCSR
_A_MCUCSR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,053H
// union <unnamed> volatile __io _A_TCCR0
_A_TCCR0:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,052H
// union <unnamed> volatile __io _A_TCNT0
_A_TCNT0:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,051H
// union <unnamed> volatile __io _A_OCR0
_A_OCR0:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,050H
// union <unnamed> volatile __io _A_ASSR
_A_ASSR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,04fH
// union <unnamed> volatile __io _A_TCCR1A
_A_TCCR1A:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,04eH
// union <unnamed> volatile __io _A_TCCR1B
_A_TCCR1B:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,04cH
// union <unnamed> volatile __io _A_TCNT1
_A_TCNT1:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,04aH
// union <unnamed> volatile __io _A_OCR1A
_A_OCR1A:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,048H
// union <unnamed> volatile __io _A_OCR1B
_A_OCR1B:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,046H
// union <unnamed> volatile __io _A_ICR1
_A_ICR1:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,045H
// union <unnamed> volatile __io _A_TCCR2
_A_TCCR2:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,044H
// union <unnamed> volatile __io _A_TCNT2
_A_TCNT2:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,043H
// union <unnamed> volatile __io _A_OCR2
_A_OCR2:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,042H
// union <unnamed> volatile __io _A_OCDR
_A_OCDR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,041H
// union <unnamed> volatile __io _A_WDTCR
_A_WDTCR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,040H
// union <unnamed> volatile __io _A_SFIOR
_A_SFIOR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,03eH
// union <unnamed> volatile __io _A_EEAR
_A_EEAR:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,03dH
// union <unnamed> volatile __io _A_EEDR
_A_EEDR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,03cH
// union <unnamed> volatile __io _A_EECR
_A_EECR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,03bH
// union <unnamed> volatile __io _A_PORTA
_A_PORTA:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,03aH
// union <unnamed> volatile __io _A_DDRA
_A_DDRA:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,039H
// union <unnamed> volatile __io _A_PINA
_A_PINA:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,038H
// union <unnamed> volatile __io _A_PORTB
_A_PORTB:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,037H
// union <unnamed> volatile __io _A_DDRB
_A_DDRB:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,036H
// union <unnamed> volatile __io _A_PINB
_A_PINB:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,035H
// union <unnamed> volatile __io _A_PORTC
_A_PORTC:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,034H
// union <unnamed> volatile __io _A_DDRC
_A_DDRC:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,033H
// union <unnamed> volatile __io _A_PINC
_A_PINC:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,032H
// union <unnamed> volatile __io _A_PORTD
_A_PORTD:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,031H
// union <unnamed> volatile __io _A_DDRD
_A_DDRD:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,030H
// union <unnamed> volatile __io _A_PIND
_A_PIND:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,02fH
// union <unnamed> volatile __io _A_SPDR
_A_SPDR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,02eH
// union <unnamed> volatile __io _A_SPSR
_A_SPSR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,02dH
// union <unnamed> volatile __io _A_SPCR
_A_SPCR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,02cH
// union <unnamed> volatile __io _A_UDR0
_A_UDR0:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,02bH
// union <unnamed> volatile __io _A_UCSR0A
_A_UCSR0A:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,02aH
// union <unnamed> volatile __io _A_UCSR0B
_A_UCSR0B:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,029H
// union <unnamed> volatile __io _A_UBRR0L
_A_UBRR0L:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,028H
// union <unnamed> volatile __io _A_ACSR
_A_ACSR:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,027H
// union <unnamed> volatile __io _A_ADMUX
_A_ADMUX:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,026H
// union <unnamed> volatile __io _A_ADCSRA
_A_ADCSRA:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,024H
// union <unnamed> volatile __io _A_ADC
_A_ADC:
        DS8 2

        ASEGN ABSOLUTE:DATA:ROOT,023H
// union <unnamed> volatile __io _A_PORTE
_A_PORTE:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,022H
// union <unnamed> volatile __io _A_DDRE
_A_DDRE:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,021H
// union <unnamed> volatile __io _A_PINE
_A_PINE:
        DS8 1

        ASEGN ABSOLUTE:DATA:ROOT,020H
// union <unnamed> volatile __io _A_PINF
_A_PINF:
        DS8 1
//   13 #include "UartMT.h"

        RSEG CODE:CODE:NOROOT(1)
// __nearfunc __version_3 CTask::CTask()
??CTask:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??CTask
          CFI NoCalls
        LDI     R18, LOW(??__vtbl_1)
        LDI     R19, (??__vtbl_1) >> 8
        MOVW    R31:R30, R17:R16
        STD     Z+3, R18
        STD     Z+4, R19
        RET
          CFI EndBlock cfiBlock0
//   14 #include "SerialMT.h"
//   15 #include "Crc.h"
//   16 
//   17 
//   18 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   19 CUartMT::CUartMT()
??CUartMT:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ??CUartMT
//   20 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
        MOV     R16, R18
        OR      R16, R19
        BRNE    ??CUartMT_1
        LDI     R16, 1
        RJMP    ??CUartMT_2
??CUartMT_1:
        LDI     R16, 0
??CUartMT_2:
        TST     R16
        BREQ    ??CUartMT_3
        MOVW    R19:R18, R27:R26
        SUBI    R18, 241
        SBCI    R19, 255
        MOVW    R31:R30, R27:R26
        STD     Z+11, R18
        STD     Z+12, R19
        MOVW    R21:R20, R27:R26
        SUBI    R20, 229
        SBCI    R21, 255
        MOVW    R31:R30, R27:R26
        STD     Z+13, R20
        STD     Z+14, R21
        MOVW    R17:R16, R27:R26
        SUBI    R16, 229
        SBCI    R17, 255
          CFI FunCall ??CTask
        CALL    ??CTask
        RJMP    ??CUartMT_4
??CUartMT_3:
        MOVW    R31:R30, R27:R26
        STD     Z+11, R18
        STD     Z+12, R19
        MOVW    R31:R30, R27:R26
        STD     Z+13, R20
        STD     Z+14, R21
??CUartMT_4:
        LDI     R16, LOW(??__vtbl)
        LDI     R17, (??__vtbl) >> 8
        MOVW    R31:R30, R27:R26
        STD     Z+9, R16
        STD     Z+10, R17
//   21 
//   22 }
        MOVW    R17:R16, R27:R26
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock1

        RSEG CODE:CODE:NOROOT(1)
// __version_3 CUartMT &CUartMT::new CUartMT()
`??new CUartMT`:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function `??new CUartMT`
        LDI     R16, 32
        LDI     R17, 0
          CFI FunCall `??operator new`
        CALL    `??operator new`
        MOV     R18, R16
        OR      R18, R17
        BREQ    `??new CUartMT_1`
        LDI     R20, 0
        LDI     R21, 0
        LDI     R18, 0
        LDI     R19, 0
          CFI FunCall ??CUartMT
        RCALL   ??CUartMT
        RET
`??new CUartMT_1`:
        LDI     R16, 0
        LDI     R17, 0
        RET
          CFI EndBlock cfiBlock2
//   23 
//   24 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   25 CUartMT::~CUartMT()
`?~CUartMT`:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function `?~CUartMT`
//   26 {
        ST      -Y, R25
          CFI R25 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R25:R24, R17:R16
        MOV     R16, R24
        OR      R16, R25
        BREQ    `?~CUartMT_1`
        BST     R18, 0
        BRTC    `?~CUartMT_1`
//   27 
//   28 }
        MOVW    R17:R16, R25:R24
          CFI FunCall `??operator delete`
        CALL    `??operator delete`
`?~CUartMT_1`:
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+1
        LD      R25, Y+
          CFI R25 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock3
//   29 
//   30 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   31 void CUartMT::Init(void)
??Init:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function ??Init
          CFI NoCalls
//   32 {
//   33 
//   34 }
        RET
          CFI EndBlock cfiBlock4
//   35 
//   36 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   37 void CUartMT::Reset(void)
??Reset:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function ??Reset
//   38 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//   39     m_pxDevice -> Reset();
        LD      R16, X+
        LD      R17, X
        SBIW    R27:R26, 1
          CFI FunCall ??Reset_1
        CALL    ??Reset_1
//   40     m_uiMessageLength = 0;
        ADIW    R27:R26, 11
        LD      R30, X+
        LD      R31, X
        SBIW    R27:R26, 12
        LDI     R16, 0
        STD     Z+2, R16
        LDI     R16, 0
        STD     Z+3, R16
//   41 }
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock5
//   42 
//   43 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   44 int8_t CUartMT::ReceiveEnable(void)
??ReceiveEnable:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function ??ReceiveEnable
//   45 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//   46     m_pxDevice -> Enable();
        LD      R16, X+
        LD      R17, X
        SBIW    R27:R26, 1
          CFI FunCall ??Enable
        CALL    ??Enable
//   47 }
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock6
//   48 
//   49 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   50 int8_t CUartMT::ReceiveDisable(void)
??ReceiveDisable:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function ??ReceiveDisable
//   51 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//   52     m_pxDevice -> Disable();
        LD      R16, X+
        LD      R17, X
        SBIW    R27:R26, 1
          CFI FunCall ??Disable
        CALL    ??Disable
//   53 }
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock7
//   54 
//   55 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   56 int16_t CUartMT::Tail(uint8_t *puiMessage, uint16_t uiLength)
??Tail:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function ??Tail
//   57 {
        CALL    ?PROLOGUE6_L09
          CFI R5 Frame(CFA_Y, -1)
          CFI R4 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -5)
          CFI R24 Frame(CFA_Y, -6)
          CFI CFA_Y Y+6
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        MOVW    R5:R4, R17:R16
        MOVW    R27:R26, R19:R18
        MOVW    R25:R24, R21:R20
//   58     uint16_t uiCrc = usCrc16(puiMessage, uiLength);
        MOVW    R19:R18, R25:R24
        MOVW    R17:R16, R27:R26
          CFI FunCall ??usCrc16
        CALL    ??usCrc16
        MOVW    R19:R18, R17:R16
//   59     puiMessage[uiLength++] = uiCrc & 0x00FF;
        MOV     R16, R18
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        ST      Z, R16
        ADIW    R25:R24, 1
//   60     puiMessage[uiLength++] = uiCrc >> 8;
        MOVW    R17:R16, R19:R18
        MOV     R16, R17
        LDI     R17, 0
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        ST      Z, R16
        ADIW    R25:R24, 1
//   61 
//   62     return uiLength;
        MOVW    R17:R16, R25:R24
        LDI     R30, 6
        JMP     ?EPILOGUE_B6_L09
//   63 }
          CFI EndBlock cfiBlock8
//   64 
//   65 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   66 int16_t CUartMT::Send(uint8_t *puiMessage, uint16_t uiLength)
??Send:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function ??Send
//   67 {
        CALL    ?PROLOGUE6_L09
          CFI R5 Frame(CFA_Y, -1)
          CFI R4 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -5)
          CFI R24 Frame(CFA_Y, -6)
          CFI CFA_Y Y+6
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        MOVW    R27:R26, R17:R16
        MOVW    R5:R4, R19:R18
        MOVW    R25:R24, R21:R20
//   68     return m_pxDevice -> Write(puiMessage, uiLength);
        MOVW    R21:R20, R25:R24
        MOVW    R19:R18, R5:R4
        LD      R16, X+
        LD      R17, X
        SBIW    R27:R26, 1
          CFI FunCall ??Write
        CALL    ??Write
        LDI     R30, 6
        JMP     ?EPILOGUE_B6_L09
//   69 }
          CFI EndBlock cfiBlock9
//   70 
//   71 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   72 uint8_t CUartMT::MessageIsSended(void)
??MessageIsSended:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function ??MessageIsSended
//   73 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//   74     return m_pxDevice -> FrameIsSended();
        LD      R16, X+
        LD      R17, X
        SBIW    R27:R26, 1
          CFI FunCall ??FrameIsSended
        CALL    ??FrameIsSended
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
//   75 }
          CFI EndBlock cfiBlock10
//   76 
//   77 ////-----------------------------------------------------------------------------------------------------
//   78 //int16_t CUartMT::Receive(void)
//   79 //{
//   80 //    return m_pxDevice -> Read();
//   81 //}
//   82 
//   83 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   84 uint8_t CUartMT::Select(void)
??Select:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function ??Select
//   85 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//   86     return m_pxDevice -> ByteIsReceived();
        LD      R16, X+
        LD      R17, X
        SBIW    R27:R26, 1
          CFI FunCall ??ByteIsReceived
        CALL    ??ByteIsReceived
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
//   87 }
          CFI EndBlock cfiBlock11
//   88 
//   89 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   90 int16_t CUartMT::Receive(uint8_t *puiDestination, uint16_t uiLength)
??Receive:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function ??Receive
//   91 {
        CALL    ?PROLOGUE6_L09
          CFI R5 Frame(CFA_Y, -1)
          CFI R4 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -5)
          CFI R24 Frame(CFA_Y, -6)
          CFI CFA_Y Y+6
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        MOVW    R27:R26, R17:R16
        MOVW    R5:R4, R19:R18
        MOVW    R25:R24, R21:R20
//   92     return m_pxDevice -> Read(puiDestination, uiLength);
        MOVW    R21:R20, R25:R24
        MOVW    R19:R18, R5:R4
        LD      R16, X+
        LD      R17, X
        SBIW    R27:R26, 1
          CFI FunCall ??Read
        CALL    ??Read
        LDI     R30, 6
        JMP     ?EPILOGUE_B6_L09
//   93 }
          CFI EndBlock cfiBlock12
//   94 
//   95 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//   96 uint8_t CUartMT::FrameIsReceived(void)
??FrameIsReceived:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function ??FrameIsReceived
//   97 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//   98     if ((CPlatform::GetSystemTick() - m_uiLastSystemTime)  >=
//   99             m_uiGuardTimeout)
          CFI FunCall ??GetSystemTick
        CALL    ??GetSystemTick
        ADIW    R27:R26, 11
        LD      R30, X+
        LD      R31, X
        SBIW    R27:R26, 12
        LD      R18, Z
        LDD     R19, Z+1
        SUB     R16, R18
        SBC     R17, R19
        CPI     R16, 4
        SBCI    R17, 0
        BRCS    ??FrameIsReceived_1
//  100     {
//  101         return 1;
        LDI     R16, 1
        RJMP    ??FrameIsReceived_2
//  102     }
//  103     else
//  104     {
//  105         return 0;
??FrameIsReceived_1:
        LDI     R16, 0
??FrameIsReceived_2:
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
//  106     }
//  107 };
          CFI EndBlock cfiBlock13
//  108 
//  109 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//  110 uint8_t CUartMT::ReceiveTimeIsOver(void)
??ReceiveTimeIsOver:
          CFI Block cfiBlock14 Using cfiCommon0
          CFI Function ??ReceiveTimeIsOver
//  111 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//  112     if ((CPlatform::GetSystemTick() - m_uiLastSystemTime)  >=
//  113             m_uiReceiveTimeout)
          CFI FunCall ??GetSystemTick
        CALL    ??GetSystemTick
        ADIW    R27:R26, 11
        LD      R30, X+
        LD      R31, X
        SBIW    R27:R26, 12
        LD      R18, Z
        LDD     R19, Z+1
        SUB     R16, R18
        SBC     R17, R19
        CPI     R16, 152
        LDI     R18, 0
        CPC     R17, R18
        BRCS    ??ReceiveTimeIsOver_1
//  114     {
//  115         return 1;
        LDI     R16, 1
        RJMP    ??ReceiveTimeIsOver_2
//  116     }
//  117     else
//  118     {
//  119         return 0;
??ReceiveTimeIsOver_1:
        LDI     R16, 0
??ReceiveTimeIsOver_2:
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
//  120     }
//  121 };
          CFI EndBlock cfiBlock14
//  122 
//  123 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//  124 uint16_t CUartMT::GetFrameLength(void)
??GetFrameLength_1:
          CFI Block cfiBlock15 Using cfiCommon0
          CFI Function ??GetFrameLength_1
//  125 {
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//  126     return m_pxDevice -> GetFrameLength();
        LD      R16, X+
        LD      R17, X
        SBIW    R27:R26, 1
          CFI FunCall ??GetFrameLength
        CALL    ??GetFrameLength
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+1
        LD      R27, Y+
          CFI R27 SameValue
          CFI CFA_Y Y+0
        RET
//  127 }
          CFI EndBlock cfiBlock15
//  128 
//  129 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//  130 void CUartMT::GetSystemTime(void)
??GetSystemTime:
          CFI Block cfiBlock16 Using cfiCommon0
          CFI Function ??GetSystemTime
//  131 {
        ST      -Y, R25
          CFI R25 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R25:R24, R17:R16
//  132     GetSystemTime();
        MOVW    R17:R16, R25:R24
          CFI FunCall ??GetSystemTime
        RCALL   ??GetSystemTime
//  133 }
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+1
        LD      R25, Y+
          CFI R25 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock16
//  134 
//  135 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//  136 int8_t CUartMT::FrameCheck(void)
??FrameCheck:
          CFI Block cfiBlock17 Using cfiCommon0
          CFI Function ??FrameCheck
//  137 {
        CALL    ?PROLOGUE4_L09
          CFI R27 Frame(CFA_Y, -1)
          CFI R26 Frame(CFA_Y, -2)
          CFI R25 Frame(CFA_Y, -3)
          CFI R24 Frame(CFA_Y, -4)
          CFI CFA_Y Y+4
        MOVW    R27:R26, R17:R16
//  138     if (m_pxDevice -> m_nuiRxBuffByteCounter < MIN_MESSAGE_LENGTH)
        LD      R30, X+
        LD      R31, X
        SBIW    R27:R26, 1
        LDD     R24, Z+24
        LDD     R25, Z+25
        SBIW    R25:R24, 4
        BRCC    ??FrameCheck_2
//  139     {
//  140         return 0;
        LDI     R16, 0
        RJMP    ??FrameCheck_3
//  141     }
//  142 
//  143     uint16_t uiCrc = ((static_cast<uint16_t>(m_puiRxBuffer[m_pxDevice -> m_nuiRxBuffByteCounter - 1]) << 8) |
//  144                       (static_cast<uint16_t>(m_puiRxBuffer[m_pxDevice -> m_nuiRxBuffByteCounter - 2])));
??FrameCheck_2:
        ADIW    R27:R26, 11
        LD      R30, X+
        LD      R31, X
        SBIW    R27:R26, 12
        LDD     R16, Z+8
        LDD     R17, Z+9
        LD      R30, X+
        LD      R31, X
        SBIW    R27:R26, 1
        LDD     R18, Z+24
        LDD     R19, Z+25
        ADD     R16, R18
        ADC     R17, R19
        SUBI    R16, 1
        SBCI    R17, 0
        MOVW    R31:R30, R17:R16
        LD      R25, Z
        LDI     R24, 0
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+8
        LDD     R17, Z+9
        LD      R30, X+
        LD      R31, X
        SBIW    R27:R26, 1
        LDD     R18, Z+24
        LDD     R19, Z+25
        ADD     R16, R18
        ADC     R17, R19
        SUBI    R16, 2
        SBCI    R17, 0
        MOVW    R31:R30, R17:R16
        LD      R16, Z
        LDI     R17, 0
        OR      R24, R16
        OR      R25, R17
//  145 
//  146     if (usCrc16(m_puiRxBuffer,
//  147                 (m_pxDevice -> m_nuiRxBuffByteCounter - CRC_LENGTH)) == uiCrc)
        LD      R30, X+
        LD      R31, X
        SBIW    R27:R26, 1
        LDD     R18, Z+24
        LDD     R19, Z+25
        SUBI    R18, 2
        SBCI    R19, 0
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+8
        LDD     R17, Z+9
          CFI FunCall ??usCrc16
        CALL    ??usCrc16
        CP      R16, R24
        CPC     R17, R25
        BRNE    ??FrameCheck_4
//  148     {
//  149         return 1;
        LDI     R16, 1
        RJMP    ??FrameCheck_3
//  150     }
//  151     else
//  152     {
//  153         return 0;
??FrameCheck_4:
        LDI     R16, 0
??FrameCheck_3:
        LDI     R30, 4
        JMP     ?EPILOGUE_B4_L09
//  154     }
//  155 }
          CFI EndBlock cfiBlock17
//  156 
//  157 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//  158 int8_t CUartMT::FrameCheck(uint8_t *puiSourse, uint16_t uiLength)
??FrameCheck_1:
          CFI Block cfiBlock18 Using cfiCommon0
          CFI Function ??FrameCheck_1
//  159 {
        CALL    ?PROLOGUE10_L09
          CFI R9 Frame(CFA_Y, -1)
          CFI R8 Frame(CFA_Y, -2)
          CFI R7 Frame(CFA_Y, -3)
          CFI R6 Frame(CFA_Y, -4)
          CFI R5 Frame(CFA_Y, -5)
          CFI R4 Frame(CFA_Y, -6)
          CFI R27 Frame(CFA_Y, -7)
          CFI R26 Frame(CFA_Y, -8)
          CFI R25 Frame(CFA_Y, -9)
          CFI R24 Frame(CFA_Y, -10)
          CFI CFA_Y Y+10
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        REQUIRE ?Register_R6_is_cg_reg
        REQUIRE ?Register_R7_is_cg_reg
        REQUIRE ?Register_R8_is_cg_reg
        REQUIRE ?Register_R9_is_cg_reg
        MOVW    R9:R8, R17:R16
        MOVW    R27:R26, R19:R18
        MOVW    R25:R24, R21:R20
//  160     if (uiLength < MIN_MESSAGE_LENGTH)
        CPI     R24, 4
        LDI     R16, 0
        CPC     R25, R16
        BRCC    ??FrameCheck_5
//  161     {
//  162         return 0;
        LDI     R16, 0
        RJMP    ??FrameCheck_6
//  163     }
//  164 
//  165     uint16_t uiCrc = ((static_cast<uint16_t>(puiSourse[uiLength - 1]) << 8) |
//  166                       (static_cast<uint16_t>(puiSourse[uiLength - 2])));
??FrameCheck_5:
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        SBIW    R31:R30, 1
        LD      R5, Z
        CLR     R4
        MOVW    R31:R30, R27:R26
        ADD     R30, R24
        ADC     R31, R25
        SBIW    R31:R30, 2
        LD      R16, Z
        LDI     R17, 0
        OR      R4, R16
        OR      R5, R17
//  167     uint16_t uiCrcTemp = usCrc16(puiSourse,
//  168                                  (uiLength - CRC_LENGTH));
        MOVW    R19:R18, R25:R24
        SUBI    R18, 2
        SBCI    R19, 0
        MOVW    R17:R16, R27:R26
          CFI FunCall ??usCrc16
        CALL    ??usCrc16
        MOVW    R7:R6, R17:R16
//  169     if (usCrc16(puiSourse,
//  170                 (uiLength - CRC_LENGTH)) == uiCrc)
        MOVW    R19:R18, R25:R24
        SUBI    R18, 2
        SBCI    R19, 0
        MOVW    R17:R16, R27:R26
          CFI FunCall ??usCrc16
        CALL    ??usCrc16
        CP      R16, R4
        CPC     R17, R5
        BRNE    ??FrameCheck_7
//  171     {
//  172         return 1;
        LDI     R16, 1
        RJMP    ??FrameCheck_6
//  173     }
//  174     else
//  175     {
//  176         return 0;
??FrameCheck_7:
        LDI     R16, 0
??FrameCheck_6:
        LDI     R30, 10
        JMP     ?EPILOGUE_B10_L09
//  177     }
//  178 }
          CFI EndBlock cfiBlock18
//  179 
//  180 //-----------------------------------------------------------------------------------------------------

        RSEG CODE:CODE:NOROOT(1)
//  181 void CUartMT::Execution(void)
??Execution:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function ??Execution
//  182 {
        CALL    ?PROLOGUE4_L09
          CFI R27 Frame(CFA_Y, -1)
          CFI R26 Frame(CFA_Y, -2)
          CFI R25 Frame(CFA_Y, -3)
          CFI R24 Frame(CFA_Y, -4)
          CFI CFA_Y Y+4
        MOVW    R27:R26, R17:R16
//  183     int16_t iReceivedCounter;
//  184 
//  185     switch (m_uiFlowControl)
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LD      R16, Z
        SUBI    R16, 0
        BREQ    ??Execution_1
        DEC     R16
        BREQ    ??Execution_2
        DEC     R16
        BREQ    ??Execution_3
        DEC     R16
        BRNE    $+2+2
        RJMP    ??Execution_4
        SUBI    R16, 2
        BRNE    $+2+2
        RJMP    ??Execution_5
        DEC     R16
        BRNE    $+2+2
        RJMP    ??Execution_6
        RJMP    ??Execution_7
//  186     {
//  187     case IDDLE:
//  188         break;
??Execution_1:
        RJMP    ??Execution_7
//  189 
//  190     case START:
//  191         GetSystemTime();
??Execution_2:
        MOVW    R17:R16, R27:R26
          CFI FunCall ??GetSystemTime
        RCALL   ??GetSystemTime
//  192         Reset();
        MOVW    R17:R16, R27:R26
          CFI FunCall ??Reset
        RCALL   ??Reset
//  193         m_uiFlowControl = WAITING_MESSAGE;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 2
        ST      Z, R16
//  194         break;
        RJMP    ??Execution_7
//  195 
//  196     case WAITING_MESSAGE:
//  197         if (Select())
??Execution_3:
        MOVW    R17:R16, R27:R26
          CFI FunCall ??Select
        RCALL   ??Select
        TST     R16
        BREQ    ??Execution_8
//  198         {
//  199             iReceivedCounter = Receive(m_puiRxBuffer + m_uiMessageLength, MESSAGE_BAG_MAX_LENGTH - m_uiMessageLength);
        LDI     R20, 251
        LDI     R21, 0
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+2
        LDD     R17, Z+3
        SUB     R20, R16
        SBC     R21, R17
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R18, Z+8
        LDD     R19, Z+9
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+2
        LDD     R17, Z+3
        ADD     R18, R16
        ADC     R19, R17
        MOVW    R17:R16, R27:R26
          CFI FunCall ??Receive
        RCALL   ??Receive
        MOVW    R25:R24, R17:R16
//  200 
//  201             if (iReceivedCounter > 0)
        CPI     R24, 1
        LDI     R16, 0
        CPC     R25, R16
        BRLT    ??Execution_9
//  202             {
//  203                 m_uiMessageLength += iReceivedCounter;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+2
        LDD     R17, Z+3
        ADD     R16, R24
        ADC     R17, R25
        STD     Z+2, R16
        STD     Z+3, R17
//  204                 GetSystemTime();
        MOVW    R17:R16, R27:R26
          CFI FunCall ??GetSystemTime
        RCALL   ??GetSystemTime
//  205                 m_uiFlowControl = RECEIVE_MESSAGE;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 3
        ST      Z, R16
        RJMP    ??Execution_8
//  206             }
//  207             else if (iReceivedCounter == -1)
??Execution_9:
        CPI     R24, 255
        LDI     R16, 255
        CPC     R25, R16
        BRNE    ??Execution_8
//  208             {
//  209                 m_uiFlowControl = START;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 1
        ST      Z, R16
//  210             }
//  211         }
//  212 
//  213         if (ReceiveTimeIsOver())
??Execution_8:
        MOVW    R17:R16, R27:R26
          CFI FunCall ??ReceiveTimeIsOver
        RCALL   ??ReceiveTimeIsOver
        TST     R16
        BREQ    ??Execution_10
//  214         {
//  215             m_uiFlowControl = START;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 1
        ST      Z, R16
//  216         }
//  217 
//  218         break;
??Execution_10:
        RJMP    ??Execution_7
//  219 
//  220     case RECEIVE_MESSAGE:
//  221         if (Select())
??Execution_4:
        MOVW    R17:R16, R27:R26
          CFI FunCall ??Select
        RCALL   ??Select
        TST     R16
        BREQ    ??Execution_11
//  222         {
//  223             iReceivedCounter = Receive(m_puiRxBuffer + m_uiMessageLength, MESSAGE_BAG_MAX_LENGTH - m_uiMessageLength);
        LDI     R20, 251
        LDI     R21, 0
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+2
        LDD     R17, Z+3
        SUB     R20, R16
        SBC     R21, R17
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R18, Z+8
        LDD     R19, Z+9
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+2
        LDD     R17, Z+3
        ADD     R18, R16
        ADC     R19, R17
        MOVW    R17:R16, R27:R26
          CFI FunCall ??Receive
        RCALL   ??Receive
        MOVW    R25:R24, R17:R16
//  224 
//  225             if (iReceivedCounter > 0)
        CPI     R24, 1
        LDI     R16, 0
        CPC     R25, R16
        BRLT    ??Execution_12
//  226             {
//  227                 m_uiMessageLength += iReceivedCounter;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+2
        LDD     R17, Z+3
        ADD     R16, R24
        ADC     R17, R25
        STD     Z+2, R16
        STD     Z+3, R17
//  228                 GetSystemTime();
        MOVW    R17:R16, R27:R26
          CFI FunCall ??GetSystemTime
        RCALL   ??GetSystemTime
        RJMP    ??Execution_11
//  229             }
//  230             else if (iReceivedCounter == -1)
??Execution_12:
        CPI     R24, 255
        LDI     R16, 255
        CPC     R25, R16
        BRNE    ??Execution_11
//  231             {
//  232                 m_uiFlowControl = START;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 1
        ST      Z, R16
//  233             }
//  234         }
//  235 
//  236         if (FrameIsReceived())
??Execution_11:
        MOVW    R17:R16, R27:R26
          CFI FunCall ??FrameIsReceived
        RCALL   ??FrameIsReceived
        TST     R16
        BREQ    ??Execution_13
//  237         {
//  238             if (FrameCheck(m_puiRxBuffer, m_uiMessageLength))
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R20, Z+2
        LDD     R21, Z+3
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R18, Z+8
        LDD     R19, Z+9
        MOVW    R17:R16, R27:R26
          CFI FunCall ??FrameCheck_1
        RCALL   ??FrameCheck_1
        TST     R16
        BREQ    ??Execution_14
//  239             {
//  240                 m_uiFlowControl = REPLY;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 5
        ST      Z, R16
        RJMP    ??Execution_7
//  241             }
//  242             else
//  243             {
//  244                 m_uiFlowControl = START;
??Execution_14:
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 1
        ST      Z, R16
//  245             }
//  246         }
//  247 
//  248         break;
??Execution_13:
        RJMP    ??Execution_7
//  249 
//  250     case REPLY:
//  251         if (Reply(m_puiRxBuffer, m_puiTxBuffer, m_uiMessageLength))
??Execution_5:
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R22, Z+2
        LDD     R23, Z+3
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R20, Z+10
        LDD     R21, Z+11
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R17:R16
        LDD     R18, Z+8
        LDD     R19, Z+9
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+11
        LDD     R17, Z+12
          CFI FunCall ??Reply
        CALL    ??Reply
        OR      R16, R17
        BREQ    ??Execution_15
//  252         {
//  253             CPlatform::TxLedOn();
          CFI FunCall ??TxLedOn
        CALL    ??TxLedOn
//  254             m_uiFlowControl = FRAME_TRANSMIT;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 6
        ST      Z, R16
        RJMP    ??Execution_7
//  255         }
//  256         else
//  257         {
//  258             CPlatform::TxLedOff();
??Execution_15:
          CFI FunCall ??TxLedOff
        CALL    ??TxLedOff
//  259             m_uiFlowControl = START;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 1
        ST      Z, R16
//  260         }
//  261         break;
        RJMP    ??Execution_7
//  262 
//  263     case FRAME_TRANSMIT:
//  264         if (MessageIsSended())
??Execution_6:
        MOVW    R17:R16, R27:R26
          CFI FunCall ??MessageIsSended
        RCALL   ??MessageIsSended
        TST     R16
        BREQ    ??Execution_7
//  265         {
//  266             CPlatform::TxLedOff();
          CFI FunCall ??TxLedOff
        CALL    ??TxLedOff
//  267             m_uiFlowControl = START;
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+13
        LDD     R17, Z+14
        MOVW    R31:R30, R17:R16
        LDI     R16, 1
        ST      Z, R16
//  268         }
//  269 
//  270         break;
//  271 
//  272     default:
//  273         break;
//  274     }
//  275 
//  276 }
??Execution_7:
        LDI     R30, 4
        JMP     ?EPILOGUE_B4_L09
          CFI EndBlock cfiBlock19

        RSEG CODE:CODE:NOROOT(1)
// __version_3 uint8_t CUart::ByteIsReceived()
??ByteIsReceived:
          CFI Block cfiBlock20 Using cfiCommon0
          CFI Function ??ByteIsReceived
          CFI NoCalls
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+42
        RET
          CFI EndBlock cfiBlock20

        RSEG CODE:CODE:NOROOT(1)
// __version_3 uint8_t CUart::FrameIsSended()
??FrameIsSended:
          CFI Block cfiBlock21 Using cfiCommon0
          CFI Function ??FrameIsSended
          CFI NoCalls
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+43
        RET
          CFI EndBlock cfiBlock21

        RSEG CODE:CODE:NOROOT(1)
// __version_3 uint16_t CUart::GetFrameLength()
??GetFrameLength:
          CFI Block cfiBlock22 Using cfiCommon0
          CFI Function ??GetFrameLength
          CFI NoCalls
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+24
        LDD     R17, Z+25
        RET
          CFI EndBlock cfiBlock22

        RSEG CODE:CODE:NOROOT(1)
// __version_3 uint16_t CPlatform::GetSystemTick()
??GetSystemTick:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI Function ??GetSystemTick
          CFI NoCalls
        LDI     R30, LOW(??m_uiSystemTick)
        LDI     R31, (??m_uiSystemTick) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        RET
          CFI EndBlock cfiBlock23

        RSEG CODE:CODE:NOROOT(1)
// __version_3 void CPlatform::TxLedOn()
??TxLedOn:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI Function ??TxLedOn
          CFI NoCalls
        LDS     R16, 98
        ANDI    R16, 0xBF
        STS     98, R16
        RET
          CFI EndBlock cfiBlock24
        REQUIRE _A_PORTF

        RSEG CODE:CODE:NOROOT(1)
// __version_3 void CPlatform::TxLedOff()
??TxLedOff:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI Function ??TxLedOff
          CFI NoCalls
        LDS     R16, 98
        ORI     R16, 0x40
        STS     98, R16
        RET
          CFI EndBlock cfiBlock25
        REQUIRE _A_PORTF

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        RSEG NEAR_F:CODE:ROOT(0)
// __vtbl_entry const __flash CUartMT::__vtbl[1]
??__vtbl:
        DC16 `?~CUartMT`/2

        END
// 
//   105 bytes in segment ABSOLUTE
// 1 350 bytes in segment CODE
//     2 bytes in segment NEAR_F
// 
// 1 284 bytes of CODE memory (+  68 bytes shared)
//     0 bytes of DATA memory (+ 105 bytes shared)
//
//Errors: none
//Warnings: 5
